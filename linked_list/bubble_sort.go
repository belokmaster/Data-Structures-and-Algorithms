package main

import (
	"fmt"
)

/*
Сортировка пузырьком работает таким образом, что после каждой итерации наибольший элемент всплывает в конец списка.
Если за одну итерацию не произошло перестановок, это значит, что список отсортирован, и можно завершить сортировку.
*/
func (ll *LinkedList) BubbleSort() {
	// Проверяем, пуст ли список или состоит ли он только из одного элемента.
	if ll.head == nil || ll.head.next == nil {
		fmt.Println("Список пуст.")
		return
	}

	swapped := true // Флаг, который будет отслеживать, были ли перестановки в списке.
	// Внешний цикл продолжается, пока происходят перестановки.
	for swapped {
		swapped = false    // Сбрасываем флаг перед новым проходом.
		current := ll.head // Начинаем с головного узла списка.
		// Внутренний цикл проходит по всем элементам списка, пока не достигнет последнего.
		for current != nil && current.next != nil {
			// Если значение текущего узла больше значения следующего узла, меняем их местами.
			if current.value > current.next.value {
				// Меняем значения местами.
				current.value, current.next.value = current.next.value, current.value
				swapped = true // Отмечаем, что была сделана перестановка.
			}
			current = current.next // Переходим к следующему узлу.
		}
	}
}
