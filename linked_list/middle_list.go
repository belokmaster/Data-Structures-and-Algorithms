package main

// Middle возвращает средний элемент списка
/*
Метод Middle используется для нахождения среднего элемента односвязного списка.
Он использует два указателя, которые проходят по списку с разной скоростью:
один указатель движется медленнее (по одному узлу за итерацию), а другой — быстрее (по два узла за итерацию).
*/

func (ll *LinkedList) Middle() *Node {
	slow := ll.head // инициализируем указатель slow для прохождения списка на один узел за итерацию
	fast := ll.head // инициализируем указатель fast для прохождения списка на два узла за итерацию

	// проходим по списку, пока fast и fast.next не станут nil
	for fast != nil && fast.next != nil {
		slow = slow.next      // перемещаем slow на один узел вперед
		fast = fast.next.next // перемещаем fast на два узла вперед
	}

	// когда fast достигает конца списка, slow указывает на средний элемент
	return slow
}
